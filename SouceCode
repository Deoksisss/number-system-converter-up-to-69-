static string FromTen(int finalSystem, string alph, string number)
{
    string newNumber = "";
    int numberInt = int.Parse(number);
    while (numberInt > 0)
    {
        newNumber = (alph[numberInt % finalSystem]) + newNumber;
        numberInt /= finalSystem;
    }
    return newNumber;
}

static string ToTen(int startSystem, string alph, string number)
{
    int newNumber = 0;
    while (number != "")
    {
        int localNumber = alph[..startSystem].IndexOf(number[0]) * (int)Math.Pow(startSystem, number.Length - 1);
        newNumber += localNumber;
        number = number[1..];
    }

    return newNumber.ToString();
}

static string Converter()
{
    string alph = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZАБВГДЕЁЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ";
    Console.Write("Введите число: ");
    string number = Console.ReadLine();
    int startSystem = 0;
    int finalSystem = 0;
    while (startSystem == 0)
    {
        Console.Write("Введите начальную систему счисления (число): ");
        string inputStartSystem = Console.ReadLine();
        if (int.TryParse(inputStartSystem, out int result))
        {
            startSystem = result;
        }
    }

    while (finalSystem == 0)
    {
        Console.Write("Введите конечную систему счисления (число): ");
        string inputFinalSystem = Console.ReadLine();
        if (int.TryParse(inputFinalSystem, out int result2))
        {
            finalSystem = result2;
        }
    }

    if (startSystem <= alph.Length && finalSystem <= alph.Length && (startSystem > 1 && finalSystem > 1))
    {
        if (startSystem == 10)
        {
            return FromTen(finalSystem, alph, number);
        }
        return FromTen(finalSystem, alph, ToTen(startSystem, alph, number));
    }

    return "Ввдённая вами система счисления не поддерживается текущим алфавитом.";
}

while (true)
{
    try
    {
        Console.WriteLine(Converter());
    }
    catch (FormatException)
    {
        Console.WriteLine("Вы ввели неверную систему счисления или неверное число");
    }
}
